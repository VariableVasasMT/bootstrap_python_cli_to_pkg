{% for outbox_table in outbox_tables %}
func (db *Database) writeTo{{ outbox_table.name }}(record *{{ outbox_table.referenceTable }}) (*{{ outbox_table.name }}, error) {
    outboxRecord := &{{ outbox_table.name }}{}

    // Populate fields from the main record or fetch if necessary
    {% for field in outbox_table.fields %}
    {% if 'reference' in field %}
    {% set ref_table, ref_field = field.reference.split('.') %}
    // Check if the field is a direct reference to the main table
    {% if ref_table == outbox_table.referenceTable %}
    if record.{{ ref_field }} != {{ default_value_for_type(main_table_fields[ref_table][ref_field]) }} {
        outboxRecord.{{ field.name }} = record.{{ ref_field }}
    } else {
        // Fetch the field as it's not present in the main record
        fetchedValue, err := db.Fetch{{ ref_field }}From{{ ref_table }}(record.ID)
        if err != nil {
            return nil, err
        }
        outboxRecord.{{ field.name }} = fetchedValue
    }
    {% endif %}
    {% else %}
    // For non-reference fields, populate directly
    outboxRecord.{{ field.name }} = {{ default_value_for_type(map_type(field.type)) }}
    {% endif %}
    {% endfor %}

    if err := db.DB.Create(outboxRecord).Error; err != nil {
        return nil, err
    }
    return outboxRecord, nil
}

{% endfor %}
